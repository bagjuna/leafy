name: Frontend Build and Push

on:
  push:
    branches:
      - 08-cicd  
      # 08-cicd 브랜치에 push될 때 워크플로우가 실행됩니다.
    paths:
      - 'leafy-frontend/**'
      - '.github/workflows/leafy-frontend-build-and-push.yml'

jobs:
  # --- 1. 빌드 및 푸시 Job ---
  build:
    runs-on: ubuntu-latest
    outputs:
      sha_tag: ${{ steps.get_sha.outputs.sha }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Get short commit sha
        id: get_sha
        run: echo "sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./leafy-frontend
          file: ./leafy-frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/leafy-frontend:${{ steps.get_sha.outputs.sha }}
          platforms: linux/amd64

  # --- 2. 배포 Job ---
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            export IMAGE_TAG=${{ needs.build.outputs.sha_tag }}
            export IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/leafy-frontend:$IMAGE_TAG
            
            echo "Deploying image: $IMAGE_NAME"
            
            sed -i "s|image: ${{ secrets.DOCKERHUB_USERNAME }}/leafy-frontend:.*|image: \$IMAGE_NAME|g" docker-compose.yml
            
            docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
            docker-compose pull leafy-frontend
            docker-compose up -d --remove-orphans
            docker image prune -af
